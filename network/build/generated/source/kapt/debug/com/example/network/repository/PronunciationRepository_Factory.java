// Generated by Dagger (https://dagger.dev).
package com.example.network.repository;

import com.example.network.client.PronunciationClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PronunciationRepository_Factory implements Factory<PronunciationRepository> {
  private final Provider<PronunciationClient.Companion> clientProvider;

  public PronunciationRepository_Factory(Provider<PronunciationClient.Companion> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public PronunciationRepository get() {
    return newInstance(clientProvider.get());
  }

  public static PronunciationRepository_Factory create(
      Provider<PronunciationClient.Companion> clientProvider) {
    return new PronunciationRepository_Factory(clientProvider);
  }

  public static PronunciationRepository newInstance(PronunciationClient.Companion client) {
    return new PronunciationRepository(client);
  }
}
